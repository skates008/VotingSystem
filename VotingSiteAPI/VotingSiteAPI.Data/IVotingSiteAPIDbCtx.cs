// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace VotingSiteAPI.Data
{
    using Newtonsoft.Json;
    using VotingSiteAPI.Data.EfCfgMaps;
    using VotingSiteAPI.Domain.Entities;

    public interface IVotingSiteAPIDbCtx : System.IDisposable
    {
        System.Data.Entity.DbSet<BallotType> BallotTypes { get; set; } // BallotType
        System.Data.Entity.DbSet<BallotTypeMapping> BallotTypeMappings { get; set; } // BallotTypeMapping
        System.Data.Entity.DbSet<Candidate> Candidates { get; set; } // Candidates
        System.Data.Entity.DbSet<Contest> Contests { get; set; } // Contests
        System.Data.Entity.DbSet<Election> Elections { get; set; } // Elections
        System.Data.Entity.DbSet<LoginAttempt> LoginAttempts { get; set; } // LoginAttempts
        System.Data.Entity.DbSet<Vote> Votes { get; set; } // Votes
        System.Data.Entity.DbSet<Voter> Voters { get; set; } // Voters

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

}
// </auto-generated>
