// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace VotingSiteAPI.Domain.Entities
{
    using Newtonsoft.Json;

    // LoginAttempts
    [Table("LoginAttempts", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class LoginAttempt
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ID", Order = 1, TypeName = "int")]
        [Index(@"PK_LoginAttempts", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // ID (Primary key)

        [Column(@"UserIP", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "User ip")]
        public string UserIp { get; set; } // UserIP (length: 50)

        [Column(@"BrowserAgent", Order = 3, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Browser agent")]
        public string BrowserAgent { get; set; } // BrowserAgent (length: 200)

        [Column(@"TimeStamp", Order = 4, TypeName = "datetime")]
        [Index(@"LoginIdAndTimeStamp-nc", 2, IsUnique = false, IsClustered = false)]
        [DataType(DataType.DateTime)]
        [Display(Name = "Time stamp")]
        public System.DateTime? TimeStamp { get; set; } // TimeStamp

        [Column(@"EnteredLoginID", Order = 5, TypeName = "varchar")]
        [Index(@"LoginIdAndTimeStamp-nc", 1, IsUnique = false, IsClustered = false)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Entered login ID")]
        public string EnteredLoginId { get; set; } // EnteredLoginID (length: 50)

        [Column(@"SuccessfulLogin", Order = 6, TypeName = "bit")]
        [Display(Name = "Successful login")]
        public bool? SuccessfulLogin { get; set; } // SuccessfulLogin
    }

}
// </auto-generated>
