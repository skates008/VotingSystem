// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace VotingSiteAPI.Domain.Entities
{
    using Newtonsoft.Json;

    // Elections
    [Table("Elections", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Election
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_Elections", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"ElectionName", Order = 2, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Election name")]
        public string ElectionName { get; set; } // ElectionName (length: 50)

        [Column(@"ElectionLogoUrl", Order = 3, TypeName = "varchar")]
        [MaxLength(512)]
        [StringLength(512)]
        [Display(Name = "Election logo url")]
        public string ElectionLogoUrl { get; set; } // ElectionLogoUrl (length: 512)

        [Column(@"OpenDate", Order = 4, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Open date")]
        public System.DateTime OpenDate { get; set; } // OpenDate

        [Column(@"CloseDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Close date")]
        public System.DateTime CloseDate { get; set; } // CloseDate

        [Column(@"LoginScreenOpenMessage", Order = 6, TypeName = "varchar")]
        [MaxLength(2048)]
        [StringLength(2048)]
        [Display(Name = "Login screen open message")]
        public string LoginScreenOpenMessage { get; set; } // LoginScreenOpenMessage (length: 2048)

        [Column(@"LoginScreenCloseMessage", Order = 7, TypeName = "varchar")]
        [MaxLength(2048)]
        [StringLength(2048)]
        [Display(Name = "Login screen close message")]
        public string LoginScreenCloseMessage { get; set; } // LoginScreenCloseMessage (length: 2048)

        [Column(@"LoginIDLabelTxt", Order = 8, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Login idl abel txt")]
        public string LoginIdLabelTxt { get; set; } // LoginIDLabelTxt (length: 50)

        [Column(@"LoginPINLabelTxt", Order = 9, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Login pinl abel txt")]
        public string LoginPinLabelTxt { get; set; } // LoginPINLabelTxt (length: 50)

        [Column(@"LandingPageTitle", Order = 10, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Landing page title")]
        public string LandingPageTitle { get; set; } // LandingPageTitle (length: 50)

        [Column(@"LandingPageMessage", Order = 11, TypeName = "varchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Landing page message")]
        public string LandingPageMessage { get; set; } // LandingPageMessage (length: 500)

        [Column(@"IVRPhoneNumber", Order = 12, TypeName = "varchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Ivrp hone number")]
        public string IvrPhoneNumber { get; set; } // IVRPhoneNumber (length: 30)

        // Reverse navigation

        /// <summary>
        /// Child BallotTypes where [BallotType].[ElectionID] point to this entity (FK_BallotType_Elections)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.List<BallotType> BallotTypes { get; set; } = new System.Collections.Generic.List<BallotType>(); // BallotType.FK_BallotType_Elections
        /// <summary>
        /// Child Voters where [Voters].[ElectionId] point to this entity (FK_Voters_Elections)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.List<Voter> Voters { get; set; } = new System.Collections.Generic.List<Voter>(); // Voters.FK_Voters_Elections
    }

}
// </auto-generated>
